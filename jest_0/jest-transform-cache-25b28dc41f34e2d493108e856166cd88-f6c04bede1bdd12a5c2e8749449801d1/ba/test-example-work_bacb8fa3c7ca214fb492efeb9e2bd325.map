{"version":3,"sources":["test-example-work.js"],"names":["Enzyme","configure","adapter","Adapter","myWork","describe","component","it","expect","type","toEqual","find","length","instance","openModal","state","modalOpen","toBe","closeModal","mockOpenModalFn","jest","fn","images","prop","image","src"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AAGA;;;;;;AACAA,iBAAOC,SAAP,CAAiB,EAAEC,SAAS,IAAIC,4BAAJ,EAAX,EAAjB;;AAEA,IAAMC,SAAS,CACb;AACE,WAAS,iBADX;AAEE,WAAS;AACP,YAAQ,gDADD;AAEP,WAAO,qBAFA;AAGP,eAAW;AAHJ;AAFX,CADa,EASb;AACE,WAAS,qBADX;AAEE,WAAS;AACP,YAAQ,sBADD;AAEP,WAAO,qBAFA;AAGP,eAAW;AAHJ;AAFX,CATa,CAAf;;AAoBAC,SAAS,uBAAT,EAAkC,YAAM;AACtC,MAAIC,YAAY,qBAAQ,8BAAC,qBAAD,IAAa,MAAMF,MAAnB,GAAR,CAAhB;;AAEAG,KAAG,4BAAH,EAAiC,YAAM;AACrCC,WAAOF,UAAUG,IAAV,EAAP,EAAyBC,OAAzB,CAAiC,MAAjC;AACD,GAFD;;AAIAH,KAAG,4DAAH,EAAiE,YAAM;AACrEC,WAAOF,UAAUK,IAAV,CAAe,mBAAf,EAAoCC,MAA3C,EAAmDF,OAAnD,CAA2DN,OAAOQ,MAAlE;AACD,GAFD;;AAIAL,KAAG,0CAAH,EAA+C,YAAM;AACnDD,cAAUO,QAAV,GAAqBC,SAArB;AACAN,WAAOF,UAAUO,QAAV,GAAqBE,KAArB,CAA2BC,SAAlC,EAA6CC,IAA7C,CAAkD,IAAlD;AACAX,cAAUO,QAAV,GAAqBK,UAArB;AACAV,WAAOF,UAAUO,QAAV,GAAqBE,KAArB,CAA2BC,SAAlC,EAA6CC,IAA7C,CAAkD,KAAlD;AACD,GALD;AAMD,CAjBD;;AAmBAZ,SAAS,6BAAT,EAAwC,YAAM;AAC5C,MAAIc,kBAAkBC,KAAKC,EAAL,EAAtB;AACA,MAAIf,YAAY,qBAAQ,8BAAC,8BAAD,IAAmB,SAASF,OAAO,CAAP,CAA5B;AACtB,eAAWe,eADW,GAAR,CAAhB;AAEA,MAAIG,SAAShB,UAAUK,IAAV,CAAe,KAAf,CAAb;;AAEAJ,KAAG,uCAAH,EAA4C,YAAM;AAChDC,WAAOc,OAAOV,MAAd,EAAsBF,OAAtB,CAA8B,CAA9B;AACD,GAFD;;AAIAH,KAAG,yCAAH,EAA8C,YAAM;AAClDC,WAAOc,OAAOC,IAAP,CAAY,KAAZ,CAAP,EAA2Bb,OAA3B,CAAmCN,OAAO,CAAP,EAAUoB,KAAV,CAAgBC,GAAnD;AACD,GAFD;;AAIAlB,KAAG,gDAAH,EAAqD,YAAM,CAE1D,CAFD;AAGD,CAjBD","file":"test-example-work.js","sourcesContent":["import React from 'react';\nimport { shallow } from 'enzyme';\nimport ExampleWork, { ExampleWorkBubble } from '../js/example-work';\n\nimport Enzyme from 'enzyme';\nimport Adapter from 'enzyme-adapter-react-16';\nEnzyme.configure({ adapter: new Adapter() });\n\nconst myWork = [\n  {\n    'title': \"Python Projects\",\n    'image': {\n      'desc': \"example screenshot of a project involving code\",\n      'src': \"images/example1.png\",\n      'comment': \"\"\n    }\n  },\n  {\n    'title': \"Kubernetes Projects\",\n    'image': {\n      'desc': \"Serverless Portfolio\",\n      'src': \"images/example2.png\",\n      'comment': \"\"\n    }\n  }\n]\n\n\ndescribe(\"ExampleWork component\", () => {\n  let component = shallow(<ExampleWork work={myWork}/>);\n\n  it(\"Should be a 'span' element\", () => {\n    expect(component.type()).toEqual('span');\n  });\n\n  it(\"Should contain as many children as there are work examples\", () => {\n    expect(component.find(\"ExampleWorkBubble\").length).toEqual(myWork.length);\n  });\n\n  it(\"Should allow the modal to open and close\", () => {\n    component.instance().openModal();\n    expect(component.instance().state.modalOpen).toBe(true);\n    component.instance().closeModal();\n    expect(component.instance().state.modalOpen).toBe(false);\n  })\n});\n\ndescribe(\"ExampleWorkBubble component\", () => {\n  let mockOpenModalFn = jest.fn();\n  let component = shallow(<ExampleWorkBubble example={myWork[1]}\n    openModal={mockOpenModalFn}/>);\n  let images = component.find(\"img\");\n\n  it(\"Should contain a single 'img' element\", () => {\n    expect(images.length).toEqual(1);\n  });\n\n  it(\"Should have the image src set correctly\", () => {\n    expect(images.prop('src')).toEqual(myWork[1].image.src);\n  });\n\n  it(\"Should call the openModal handler when clicked\", () => {\n\n  })\n});\n"]}